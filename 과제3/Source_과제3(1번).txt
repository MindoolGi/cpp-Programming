#include <iostream>
using namespace std;

class Dept {
	int size; // 점수 배열의 크기
	int* scores; // 점수로 할 배열의 주소
public:
	Dept(int size) { // 생성자
		this->size = size;
		scores = new int[size];
	}
	Dept(const Dept& dept); // 복사 생성자
	~Dept(); // 소멸자
	int getSize() { return size; }
	void read(); // 학생 수 입력
	bool isOver60(int index); // 60점 이상인지 판별 후 true false 결정
};

Dept::Dept(const Dept& dept) { // 복사 생성자, Dept 객체 복사할 때 호출, size 및 scores배열 복사
	this->size = dept.size; // 원본 객체 size 복사
	this->scores = new int[size]; // 새 배열 할당, 원래 배열 내용 복사
	for (int i = 0; i < size; i++) {
		this->scores[i] = dept.scores[i];
	}
}
Dept::~Dept() {
	delete[] scores;
}
void Dept::read() {
	cout << size << "명의 학생 점수를 입력하세요." << endl;
	for (int i = 0; i < size; i++) {
		cin >> scores[i];
	}
}
bool Dept::isOver60(int index) {
	return scores[index] >= 60;
}

int countPass(Dept dept) { // 60점 이상으로 통과하는 학생의 수를 카운트하기
	int count = 0;
	for (int i = 0; i < dept.getSize(); i++) {
		if (dept.isOver60(i)) count++;
	}
	return count;
}

int main() {
	Dept com(10); // Dept 학과를 com이라 하고 10이라는 정수 넣기
	com.read(); // 학생 수를 입력받기, 윗줄에 10을 넣었었으니 10으로 자동 입력
	int n = countPass(com); // 60점 이상을 판별하는 bool isOver을 활용하여 true false (1, 0)값을 확인 후 카운트 후 n에 넣음
	cout << "60점 이상은 " << n << "명";
}