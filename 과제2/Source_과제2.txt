#include <iostream>
#include <cstdlib> // 난수 생성을 위한 헤더파일 rand() 등
#include <ctime> // 현재의 시간을 가져와서 랜덤 난수를 생성하기 위함

using namespace std;

class Player {
public:
    string name;

    // 다음 줄은 이름을 받아 name 변수에 저장
    Player(string playerName) {
        name = playerName;
    }

    bool play() {
        int numbers[3];
        cout << name << ": <Enter>"; // 처음에 
        cin.ignore(); // 입력 버퍼의 남은 개행 문자 제거, 이게 없을 시에는 게임이 끝이 날때까지가 혼자 실행되어버림

        // 0, 1, 2 세 정수 중 하나를 뽑고, 3번 반복함. 0부터 2까지의 범위 설정을 위하여 난수 1개를 뽑고 3으로 나눈 나머지를 활용(나머지가 0, 1, 2중 하나이기 때문)
        for (int i = 0; i < 3; i++) {
            numbers[i] = rand() % 3;
        }

        // 다음 줄은 생성된 난수를 화면에 출력, " "를 활용하여 칸 간격 조정        
        for (int i = 0; i < 3; i++) {
            cout << "     " << numbers[i] << "     ";
            // 위의 줄에 endl을 넣으면 문제대로 난수가 오른쪽에 결과가 나오지 않고 다음줄에 나오므로 endl 미작성
        }

        // 숫자가 모두 같은지 확인 0번째와 1번째가 같고, 1번째와 2번째가 같은지 확인
        if (numbers[0] == numbers[1] && numbers[1] == numbers[2]) {
            return true;  // 승리
        }
        return false;  // 실패
    }
};

class GamblingGame {
public:
    void start() {
        srand(static_cast<unsigned int>(time(0)));  // 매번 다른 난수가 생성되게 하는 함수

        string player1Name, player2Name;
        cout << "***** 갬블링 게임을 시작합니다. *****" << endl;
        cout << "첫번째 선수 이름>>";
        cin >> player1Name;
        cout << "두번째 선수 이름>>";
        cin >> player2Name;
        cin.ignore(); // 입력 버퍼의 남은 개행 문자(엔터키) 제거, 이게 없을 시에는 두번째 선수의 이름 입력 후 엔터를 누르지않아도 난수가 생성되는 경우가 생김, 이를 방지하기 위함

        Player player1(player1Name); // 위쪽의 name변수에 저장
        Player player2(player2Name); // 위쪽의 name변수에 저장

     
        while (true) {
            // 위쪽에 play() 함수를 호출함, bool play()는 부울 즉 참거짓을 반환하기에 if 조건문으로 참이 되면 break 아니면 무한루프가 작동
            if (player1.play()) {
                cout << player1.name << "님 승리!!" << endl;
                break;
            }
            else {
                cout << "아쉽군요!" << endl;
            }

            if (player2.play()) {
                cout << player2.name << "님 승리!!" << endl;
                break;  
            }
            else {
                cout << "아쉽군요!" << endl;
            }
        }
    }
};

int main() {
    GamblingGame game;
    game.start();

    return 0;
}